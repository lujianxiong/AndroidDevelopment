冒泡排序时间复杂度分析：
冒泡排序使用了双层for循环,内层循环体才是真正完成排序的代码,因此主要分析内层循环的执行次数

最坏情况:
例子:假如对6,5,4,3,2,1进行排序

每次冒泡，有6个元素就比较5次，比较的次数是n-1,因此:
元素比较的总次数为:(n-1)+(n-2)+(n-3)+...+2+1=(n^2-n)/2

最坏情况下,每次比较都需要交换元素,因此:
元素交换总次数为(n-1)+(n-2)+(n-3)+...+2+1=(n^2-n)/2  (与元素比较次数一样)

算法总执行次数为=元素比较总次数+元素总执行次数
                =(n^2-n)/2+(n^2-n)/2
                =n^2-n
根据大O推导法则，冒泡排序的时间复杂度为O(n^2)

O(n^2)这种时间复杂度的，一旦n增到很大，它的时间复杂度会急剧上升

冒泡排序适用于待排序元素较少的时候使用.(对于大量元素这种排序性能是比较低的)


